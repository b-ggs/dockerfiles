name: buildx

on:
  schedule:
    - cron: 0 0 * * *
  push:
    branches:
      - "**"

jobs:
  buildx:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        image:
          - ansible
          - aria2
          - autosub-git
          - h5ai
          - internetarchive
          - jq
          - nginx-autoindex
          - pywal
          - tcd-git
          - tubeup
          - tubeup-fork-git
          - tubeup-git
          - twitch-dl
          - twitch-downloader-cli
          - twitch-recover
          - vlmcsd
          - vnc-xfce-firefox
          - yt-dlp
        platforms:
          - linux/amd64,linux/arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Clone additional repositories
        run: |
          case "${{ matrix.image }}" in
            h5ai)
              git clone https://github.com/b-ggs/docker-h5ai h5ai
              ;;
            vnc-xfce-firefox)
              git clone https://github.com/accetto/ubuntu-vnc-xfce-firefox.git vnc-xfce-firefox
              ;;
            vlmcsd)
              git clone https://github.com/mikolatero/docker-vlmcsd vlmcsd
              ;;
          esac
      - name: Set up Docker args
        id: docker_args
        run: |
          CONTEXT_PATH=./${{ matrix.image }}
          FILE_PATH=$CONTEXT_PATH/Dockerfile
          IMAGE=bxggs/${{ matrix.image }}

          BRANCH=${GITHUB_REF#refs/heads/}

          if [[ "$BRANCH" == "master" ]]; then
            TAG=latest
          else
            TAG="$(echo $BRANCH | sed -e 's/\//-/g')"
          fi

          echo "::set-output name=context_path::$CONTEXT_PATH"
          echo "::set-output name=file_path::$FILE_PATH"
          echo "::set-output name=tag::$IMAGE:$TAG"
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          platforms: ${{ matrix.platforms }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ${{ steps.docker_args.outputs.context_path }}
          file: ${{ steps.docker_args.outputs.file_path }}
          platforms: ${{ matrix.platforms }}
          tags: ${{ steps.docker_args.outputs.tag }}
          push: true
